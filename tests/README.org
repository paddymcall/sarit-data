#+TITLE: Notes on the sarit-data/tests things


* Setting up the database for testing

#+BEGIN_SRC bash
  #!env /bin/bash
  EXISTDIR="/opt/lib/existdb-3.0rc1" \
          EXISTCOLLECTION="/db/soup" \
          EXISTFILE="saritcorpus.xml" \
          EXISTCONFIG="../collection.xconf" \
          EXISTADMINU="admin" \
          EXSITADMINP="admin" \
          $EXISTDIR/bin/client.sh -u $EXISTADMINU -P $EXISTADMINP --no-gui --rmcol $EXISTCOLLECTION  && \
      $EXISTDIR/bin/client.sh -u $EXISTADMINU -P $EXISTADMINP --no-gui --mkcol $EXISTCOLLECTION   && \
      $EXISTDIR/bin/client.sh -u $EXISTADMINU -P $EXISTADMINP --no-gui --rmcol "/db/system/config/"$EXISTCOLLECTION && \
      $EXISTDIR/bin/client.sh -u $EXISTADMINU -P $EXISTADMINP --no-gui --mkcol "/db/system/config/"$EXISTCOLLECTION && \
      $EXISTDIR/bin/client.sh --collection "/db/system/config/"$EXISTCOLLECTION -u $EXISTADMINU -P $EXISTADMINP --parse $EXISTCONFIG && \
      $EXISTDIR/bin/client.sh --collection $EXISTCOLLECTION -u $EXISTADMINU -P $EXISTADMINP --parse $EXISTFILE 

      # on my laptop: parsed 104107439 bytes in 694576ms.
  
                          
#+END_SRC


* Some tests // experiments

- these suggest you use https://github.com/pashky/restclient.el


** see if rest api is alive

 #+BEGIN_SRC restclient
   GET http://localhost:8080/exist/rest/
   User-Agent: Emacs Restclient
 #+END_SRC


** get a file 

#+BEGIN_SRC restclient
  GET http://localhost:8080/exist/rest/sarit-data/master/avayavinirakarana.xml
#+END_SRC


** get the config

#+BEGIN_SRC restclient
  GET http://localhost:8080/exist/rest/db/system/config/db/sarit-data/collection.xconf
#+END_SRC



** simple search (not working, namespace issue?)

#+BEGIN_SRC restclient
  GET http://localhost:8080/exist/rest/sarit-data/master/avayavinirakarana.xml?_query=//p
#+END_SRC


** full text query (standard index)

#+BEGIN_SRC restclient
  POST http://localhost:8080/exist/rest/sarit-data/master/avayavinirakarana.xml
  Content-Type: application/xml

  <query xmlns="http://exist.sourceforge.net/NS/exist" xmlns:tei="http://www.tei-c.org/ns/1.0">
  <text>//tei:p[ft:query(., "तत्र")]</text>
  </query>
#+END_SRC


** full text query for slp1 index

#+BEGIN_SRC restclient
  POST http://localhost:8080/exist/rest/sarit-data/master/avayavinirakarana.xml
  Content-Type: application/xml

  <query xmlns="http://exist.sourceforge.net/NS/exist" xmlns:tei="http://www.tei-c.org/ns/1.0">
  <text>//tei:p[ft:query(., "tatra")]</text>
  </query>
#+END_SRC

** full text wildcard query no query-object

- see http://www.exist-db.org/exist/apps/doc/lucene.xml#D2.2.5

#+BEGIN_SRC restclient
  POST http://localhost:8080/exist/rest/sarit-data/master/avayavinirakarana.xml
  Content-Type: application/xml

  <query xmlns="http://exist.sourceforge.net/NS/exist" xmlns:tei="http://www.tei-c.org/ns/1.0">
  <text>//tei:p[ft:query(., "nam* AND lok*")]</text>
  </query>
#+END_SRC

** full text leading wildcard query (no query-object) + options

- see http://www.exist-db.org/exist/apps/doc/lucene.xml#D2.2.5, and
- http://www.exist-db.org/exist/apps/doc/lucene.xml#D2.2.5.10 for options

#+BEGIN_SRC restclient
  POST http://kjc-sv008.kjc.uni-heidelberg.de:8080/exist/rest/apps/sarit-data/data/avayavinirakarana.xml
  Content-Type: application/xml

  <query start="1" max="100" xmlns="http://exist.sourceforge.net/NS/exist" xmlns:tei="http://www.tei-c.org/ns/1.0">
  <text>
  <![CDATA[

                    xquery version "3.1";
                    declare namespace tei="http://www.tei-c.org/ns/1.0";
                    let $options := <options>
                            <default-operator>and</default-operator>
                            <phrase-slop>0</phrase-slop>
                            <leading-wildcard>yes</leading-wildcard>
              </options>            
                    let $query := "*tāvā*"
                    for $hit in //tei:p[ft:query(., $query, $options)]
                    let $expanded := util:expand($hit, "expand-xincludes=no")
                    order by ft:score($hit) descending
                    return <result>
                           <score>{ft:score($hit)}</score>
                           <highlighted>{$expanded}</highlighted>
                           <content>{$hit}</content>
                           </result>

    ]]>
    </text>
  </query>
#+END_SRC


** full text wildcard + diacritics

- no results here :-(
- <2016-11-16 Wed>: works with added lowercase-expanded option, added
  https://github.com/paddymcall/exist/commit/9cb23b73894623a8ac779eb98c1de97bf83c5a45

#+BEGIN_SRC restclient
  POST http://localhost:8080/exist/rest/sarit-data/master/avayavinirakarana.xml
  Content-Type: application/xml

  <query  start="1" max="100" xmlns="http://exist.sourceforge.net/NS/exist" xmlns:tei="http://www.tei-c.org/ns/1.0">
  <text>
  <![CDATA[

                    xquery version "3.1";
                    declare namespace tei="http://www.tei-c.org/ns/1.0";
                    let $options := <options>
                    <lowercase-expanded>no</lowercase-expanded>
                    <leading-wildcard>yes</leading-wildcard>
                    <filter-rewrite>yes</filter-rewrite>
                    </options>            
                    let $query := "*astvA* AND sTUl*"
                    for $hit in //tei:p[ft:query(., $query, $options)]
                    order by ft:score($hit) descending
                    return
                           <result>
                           <score>{ft:score($hit)}</score>
                           <highlighted>{util:expand($hit, "expand-xincludes='no'")}</highlighted>
                           <content>{$hit}</content>
                           </result>
    ]]>
    </text>
  </query>

#+END_SRC

** full text wildcard query with query object

- see http://www.exist-db.org/exist/apps/doc/lucene.xml#D2.2.5.9
- if the "string version" works, there's no need for this object (it's
  complicated because it requires that user input is parsed).

#+BEGIN_SRC restclient
  POST http://localhost:8080/exist/rest/sarit-data/master/avayavinirakarana.xml
  Content-Type: application/xml

  <query xmlns="http://exist.sourceforge.net/NS/exist">
  <text><![CDATA[
                
                  xquery version "3.1";
                  declare namespace tei="http://www.tei-c.org/ns/1.0";
                  let $query := <query xmlns="http://exist.sourceforge.net/NS/exist"><bool><wildcard>*atr*</wildcard></bool></query>
                  return count(//tei:p[ft:query(., $query)])
                
  ]]></text>       
  </query>
#+END_SRC




** boolean query

#+BEGIN_SRC restclient
  POST http://localhost:8080/exist/rest/sarit-data/master
  Content-Type: application/xml

  <query xmlns="http://exist.sourceforge.net/NS/exist" start="21" max="20">
  <text><![CDATA[
          
                  xquery version "3.1";
                  declare namespace tei="http://www.tei-c.org/ns/1.0";
                  let $query := <query xmlns="http://exist.sourceforge.net/NS/exist"><bool><term occur="must">yatra</term><wildcard occur="must">tatra</wildcard></bool></query>
                  for $hit in //tei:p[ft:query(., $query)]
                  order by ft:score($hit)
                  return $hit
          
  ]]></text>       
  </query>
#+END_SRC


** testing transcoding issues

#+BEGIN_SRC restclient
  POST http://localhost:8080/exist/rest/sarit-data/
  Content-Type: application/xml

  <query xmlns="http://exist.sourceforge.net/NS/exist" start="1" max="20">
  <text><![CDATA[
        
      
            xquery version "3.1";

            import module namespace sarit-slp1 = "http://hra.uni-heidelberg.de/ns/sarit-transliteration";

            sarit-slp1:transcode("sukhena"),

            sarit-slp1:transcode("sukh*ena"), 

            sarit-slp1:transcode("paramā*"),

            sarit-slp1:transcode("bh?va"),

            sarit-slp1:transcode("bh?va* AND (paramā* OR prame*)")
        
    ]]></text>       
  </query>
#+END_SRC

Results:

#+BEGIN_SRC nxml
  <exist:result xmlns:exist="http://exist.sourceforge.net/NS/exist" exist:hits="5" exist:start="1" exist:count="5" exist:compilation-time="59" exist:execution-time="59">
    <exist:value exist:type="xs:string">suKena</exist:value>
    <exist:value exist:type="xs:string">suK[*]ena</exist:value>
    <exist:value exist:type="xs:string">paramA[*]</exist:value>
    <exist:value exist:type="xs:string">B[?]va</exist:value>
    <exist:value exist:type="xs:string">B[?]va[*] [A][N][D] [(]paramA[*] [O][R] prame[*][)]</exist:value>
  </exist:result>
#+END_SRC


** Run tests

not authorized :-(

#+BEGIN_SRC restclient
GET http://localhost:8080/exist/rest/sarit-data/tests/suite.xql
#+END_SRC





** REST --> xpath lookups

- won't work, does not traverse xinclude directives like this

#+BEGIN_SRC restclient
  POST http://localhost:8080/exist/rest/sarit-data/master/saritcorpus.xml
  Content-Type: application/xml

  <query xmlns="http://exist.sourceforge.net/NS/exist" start="1" max="200">
  <text><![CDATA[
        
  xquery version "3.1";

  declare default element namespace "http://www.tei-c.org/ns/1.0";

  let $doc := request:get-path-info()

  (: let $fullpath := request:get-effective-uri() :)

  return doc($doc)/teiCorpus/*[2]//p
        
  ]]></text>
  </query>
#+END_SRC


*** trying with basex for comparison

#+BEGIN_SRC restclient
  # set a var for this
  :my-auth := (base64-encode-string "admin:admin")

  POST http://localhost:8984/rest/saritdata/saritcorpus.xml
  Authorization: Basic :my-auth
  Content-Type: application/xml


    <query xmlns="http://basex.org/rest">
    <text><![CDATA[
      
    declare default element namespace "http://www.tei-c.org/ns/1.0";

    (: let $fullpath := request:get-effective-uri() :)

    /teiCorpus//text[@xml:id="TaVā"]/body[1]/div[2]/div[1]/div[11]/div[1]/lg[1]
      
    ]]></text>
    </query>


#+END_SRC

looks good:

#+BEGIN_SRC nxml
<lg xmlns="http://www.tei-c.org/ns/1.0" xmlns:xi="http://www.w3.org/2001/XInclude">
  <l>एकखण्डेन शब्देन विशिष्टो यत्र गम्यते ।</l>
  <l>विशेषणस्य वाच्यत्वं तत्र सर्वत्र जायते ॥ ३६ ॥</l>
</lg>
<!-- POST http://localhost:8984/rest/saritdata/saritcorpus.xml -->
<!-- HTTP/1.1 200 OK -->
<!-- Content-Type: application/xml; charset=UTF-8 -->
<!-- Content-Length: 337 -->
<!-- Server: Jetty(8.1.18.v20150929) -->
<!-- Request duration: 0.016114s -->
#+END_SRC
